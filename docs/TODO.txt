* show participants on location page
* project admin on project page is not shown
* in logged out state follow buttons in lists of tasks are not shown

* 2 accounts didn't receive email verification letter

Search
    * min-width in locations/select.html
    * #search in styles and body, {% block body %}
    * qfilter in Location.get_entities
    * reimplement SearchForm and view

* script to retrieve and analyze bounce messages, spam complaints (celery tasks checking gmail messages)
* model with emails which should be blacklisted
* send emails about считайте сами
* Emails: DomainKeys, Sender ID, DKIM, SPF (dns configuration + document it)
* reinstall pydkim on server
* redirect url to track pressing on external links in emails

* write docs (entities, features, info, ajax ports, code_data)

* move html blocks for entities items in special templates and add template path to entity models
* make ideas, tasks editable in lists

* use tinymce parameters from settings.py in js
* remove tinymce buttons opening popups
* tinymce can be loaded twice due to inclusion in base.html
* rewrite tinymce widget
* getContent() should be taken for specific tinymce instances, not active

* don't load social networks scripts (include loading scripts in elements/share.html)

* links in breadcrumbs should depend on type of page or tab on location

* system of comments

* notifications

* add tabs names to title for entities, image url and description should be specified as context variable



* include other factors in users sorting (number of contacts, etc.)

* statistics for last day, week, month in dashboard is wrong
* stats for read/unread emails

* update init_database
* add more content to init_database

* sort resources in project right panel by creation time
* edit own resources on idea page and in lists
* add resource button on idea page

* popup before admin removes project resource

* other option for resources
* resources editing
* resources editor on profile page (combine with editor in registration form)

* descriptions of html fields in forms are not shown (show inside field as grey text)

* small html fixes of idea page with Yulia

* update ratings on any changes (adding, deleting, following, etc)
* override save() method of EntityProperty models to reset cache

* sorting lists by popularity, date (choose sorting type)

* drop yandex metrika?

* unsubscribe from letters

* drop idea names

* ability to delete ideas, tasks (without resources), projects

* reimplement popup windows in project

* hide follow/unfollow button for admin

* analytics of registration form

* resources in adding idea popup

* idea title is not always a link (link was removed)

* count down counter under resource description

* special location placeholder for empty tasks and projects lists should be moved to templates in locations

* use entity_base_view in location

* Убрать пустые параграфы из описания задачи/проекта. Мы можем как-то это контролировать?

* on task list page get_related_info is called twice

* new widget for location editor; add location in location list editor

* add task and add project forms should open with initialized location

Yulia:
    * send message dialog
    * feedback form formatting
    * in chrome human icon above ideas on task page has blue top line
    * help text against location select in task create form is below widget / нужно добавить класс "gr-fl" к id="location_select" 
    * idea page formatting, in particular - (пусто) when no resources are added
    * popup for linking idea to project
    * remove underlining links in main menu
    * link to feedback form (or our email), 'read us' buttons in email template (Yulia)

* consider all the cases for showing lists under task/idea (press one button first, then another)

* can admin unfollow an entity?

* fill in create form fields with grey example values

* typography http://jevix.ru/

* settings page (change password, request account deletion)

* use jinja instead of django templates (?) Check rendering time

* no breadcrumbs on create form pages
* in registration form check that russian letters are used in first and last name

* open share dialogs in popups (vk, fb, twitter)
-------------------------------------------------------------------------------
* when mouse is over the date - show exact time in hover

* split requirements to deploy and develop, use inclusion

* conventions file for front-end developer (docs about tabs and buttons, page layout)

* display data for logged in user at main page (no redirect) - data from followed entities

* project-ideas connection (editing ideas of the project)
* linking idea to project on idea page

* don't reload page after adding/removing resource to idea

* set of permissions (verified users)

* solve issues with several locations and is_main, allow to restrict a single related location for entity model

* how to edit task/project location?

* in User admin table show is_active field

* when text field text is longer than 140 - text is cut

* user's avatar, use it in comments, emails

* in datetime widget set russian names for months and days of week - http://trentrichardson.com/examples/timepicker/ (move to main.js)

* sitemaps

Static files:
    * move static and media files to a separate domain
    * minification of static files (http://developer.yahoo.com/yui/compressor/)

*  RuntimeWarning: DateTimeField received a naive datetime while time zone support is active when sending message

Dialog forms:
    * check form data for posts
    * use django forms to generate forms in dialogs (fix officials)

* depricate account activated page and registration failed page

* link social likes to the page on which they are located

Deployment:
    * switch to uwsgi
    * database backups
    * configure firewall (ufw)
    * introduce separate server for db, static and media files, memcached
    * describe deployment process in docs

Performance:
    * multi-key indices in db (http://www.postgresql.org/docs/9.1/interactive/indexes-multicolumn.html)
    * activate compression for tinymce

* check admin rights in elements.views.check_permissions (check that it works)

* ability to edit html in message (special filtering of html for emails)

* ability to request entity deletion (like with profiles)

* Invite friends button under contacts in profile

* separate getting counters and pagination entities/ids

* block at the bottom of the page (for scripts)
* move scripts loading at the bottom of html (or use defer), use firebug profiler and Net tab

* dashboard like google account reports; view email statistics by type; date boundaries
* 3 lists of old emails - active, unknown, inactive; unsent emails
* email blacklist

* 'Новости' tab for all entities

* popup with user info when mouse is over the link

* Activating compessing in tinymce breaks popups (on development server only)

Account activation:
    * fix sending profile activation email via admin
    * what happens when account activation link expires? is it possible to register again?

* README

Emails:
    * subscription configuration
    * page with form for writing messages (put link on it in emails)
    * send email notifying that user has been added to contacts (+ ability to unsubscribe)

Analytics:
    * client-side error logging - http://www.thetaboard.com/blog/client-side-error-logging-with-google-analytics?r=378
    * analytics of registration (events in GA - http://code.google.com/apis/analytics/docs/tracking/eventTrackerGuide.html) - success, errors, just visits
    * use ga events to monitor pressing buttons, registration and other activities
    * use GA custom variables to track groups of users (e.g. logged in, anonymous) - https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingCustomVariables
    * analyze average time spent on site, how often user returns, what he does

* system of notifications (show them in top panel + send accumulating email once a day)

* unsubscribe from location button on location page; put this button in the center as with officials, events

* complaints

* ability to add admins

* ability to read messages on website

Social registration
    * configure registration with fb, vk, google
    * consider case when user refuses to give rights to application
    * create page for LOGIN_ERROR_URL
    * configure django-social-auth
    * merge accounts from social and email (see SOCIAL_AUTH_ASSOCIATE_BY_MAIL)
    * google allows to login automatically if account with this email already exists (is it ok?)
    * set application permissions (e.g. FACEBOOK_EXTENDED_PERMISSIONS)
    * create google oauth2 app from grakon account (?)
    * file with all passwords, social applications (where to get them)
    * add Facebook App ID to disqus
---------------------------------------------------------------------------------
* decorator to restrict permissions on access to edit/create views

* denormalization of counters

* ability to specify yandex money account when asking for money

* Class to standartize forms features

* Introduce FINAL_URL_PREFIX and use

* show locations in tables (?)

SEO:
    * Webmaster Tools, https://www.google.com/webmasters/
    * set proper page titles
    * ability to set individual titles for tabs of static pages
    * Disallow paths in robots.txt (see django-social-auth example) - generate it and put in static on deployment
    * how to deal with large sitemaps?

* invitations to projects?

* Ability to sign up for higher levels

* popups with user's info and points in right panel

* form fields are not highlighted anymore (with uniform script)

* Give rating for comments, negative for complaints

* pages for tools and users (with search) + bring them back in main menu

* дополнительные поля в профайле (телефон, скайп, сайт, возраст?->дата рождения)

Front-end:
    * show g+ and vk buttons in dev mode; add these buttons to pages
    * share and share_horizontal overlap a lot

Misc:
    * replace grakon_share_logo.jpg with logos/share.jpg (google oauth2 app), smaller version (60x60),
        move logo url to settings
    * add tips to buttons and ? signs to get help on features of the system
    * in forms limit lengths of strings that go into model's CharField

* http://analytics.blogspot.co.uk/2012/05/new-google-analytics-easy-dashboard.html

* Check that urls are specified properly in templates (look for "/ and http://grakon.org

* privacy settings

* add per_page selector in paginator

* ability to choose timezone/determine it from location
--------------------------------------
* calendar page with projects

* add wikipedia links to locations, info about population, map boundaries

* show projects on map and allow to specify exact location on the map

* can we speed up get_for by not taking all entities, just those within requested limit?

* separate analytics of elections site
* exclude internal traffic from analytics - http://www.mcbuzz.com/2011/how-to-exclude-visitors-from-google-analytics/

* Registration form should take get parameters
* Fill in registration form with location or login
* Don't ask password in registration until email is confirmed (like in gravatar.com)

* Invite old users and simplify account creation for them (autofill name, insert hash to confirm email), registration form must be able to take get parameters

* combine create pages with search pages

* display entities assigned to higher levels of hierarchy on lower levels?

* use gravatar

* Show list my locations in top panel (if there are more than 1)

* move password change views to users (from auth)
* reasons to register on registration page (merge with landing page)

* use celery to send emails (method for delayed sending of email)

* allow user to start working without confirmation of his email, but limit his functionality (?)

* captchas

* display html fields in admin listings nicely (extract text only)
--------------------------------------
* use https://github.com/Kicksend/mailcheck to suggest correct email

* give superuser the rights of all admins (?)

Emails:
    * list-unsubscribe header
    * messages, subscription @grakon.org (send messages of different types from different emails)
    * analyze email postfixes, detect sending problems, configure properly
    * suggest users to add our emails to contacts lists

Front-end
    * take only necessary parts of jquery-ui, compress
    * use sprites to extract images from one file (especially icons) (https://github.com/jorgebastida/glue)

    * http://sass-lang.com/, http://www.bigjason.com/blog/using-sass-django/,
      http://compass-style.org/blog/2011/05/09/compass-django/
    * https://github.com/dziegler/django-css
    * http://www.modernizr.com/

    * automate search for unused and missing images, style classes

Analytics:
    * analyze when user visited site/logged in last time
    * configure logging, sentry
    * analyze access logs, use google analytics api; regularly build and analyze statistics of visits,
      which pages are visited
    * use page visits analytics to determine optimal caching times
    * use Graphite for server monitoring - http://blog.mozilla.com/webdev/2012/04/05/tracking-deployments-in-graphite/
    * get statistics on db usage

Testing:
    * perform code testing after commit (github hooks)
    * testing in browsers, selenium, http://www.browserstack.com
    * tests and test coverage

Performance:
    * make lazy reformal loading
    * start using subqueries - http://charlesleifer.com/blog/working-around-django-s-orm-to-do-interesting-things-with-gfks/
    * use debug toolbar, page speed to optimize page load

    * add all mime types to gzip list of nginx configuration
    * cache ajax (json) queries, gzip it, don't make authentication db queries for public ajax queries
    * move static content to sub-domain (?), keep it cookie-free (how?)
    * use pngcrush (pngcrush -rem alla -reduce -brute image.png result.png) to compress pngs; gif->png?
    * use jpegtran (jpegtran -copy none -optimize -perfect image.jpg > res.jpg) to compress jpegs
    * postgres configuration
    * compress favicon

Cache:
    * use template caching

AB testing:
    * https://github.com/johnboxall/django-ab
    * https://bitbucket.org/akoha/django-lean/wiki/Home
    * http://visualwebsiteoptimizer.com/feature-list.php

Celery:
    * recalculate entities points (once a day)

* update select widget in breadcrumbs with chosen (?)

* search + autocompletion

Deployment:
    * far expires date in nginx
    * configure nginx (see config settings)

    * describe complete deployment process - file access rights, running services, directories and users to create, creating database, etc.
    * separate server for media files? (512 mb)

* предлагать друзей на площадке пользуясь списком друзей в соц сетях

* project news page - store in db, rss + ability to post to social networks automatically

* don't use cache for anonymous users on the dev server (for convinience)

* start using celery

* use twisted inside scrapy to download pages with several parallel processes

* написать текст на страницах 404 и 500

* put all our media (video, presentations, logos, infographics, etc.) online in social networks

* use pylint, pyflakes for code checking (pylint --generate-rcfile > config_path; pylint --rcfile=config_path services/ > report.txt)

* use disqus api - https://github.com/disqus/DISQUS-API-Recipes/tree/master/python/oauth, https://github.com/disqus/disqus-python

* move reformal options to settings
