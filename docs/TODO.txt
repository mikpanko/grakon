* conventions file for front-end developer

* create json file with passwords and settings, use it to generate site_settings.py

* implement deployment and test on rackspace server

--------------------------------------

* organize css by files, add blocks, styling

* add russian language to tinymce (for all plugins)

* check that remove account works

* show post messages

* Introduce 1 sentence description of project and use in different templates (share, base.html, etc.) - to conventions

* sitemaps

* tests and test coverage

* shortcut to prevent using enter in dialog forms

-------------------------

* move password change views to users (from auth)
* reasons to register on registration page

* local copy of vkontakte script (for offline development)

* social registration

* create page for LOGIN_ERROR_URL

* configure django-social-auth
* set application permissions (e.g. FACEBOOK_EXTENDED_PERMISSIONS)

------------------------------

* sign emails with "Администрация Гракона" or smth. else

* track emails with http://cutroni.com/blog/2008/11/04/email-tracking-with-google-analytics/

* analytics of registration (events in GA - http://code.google.com/apis/analytics/docs/tracking/eventTrackerGuide.html) - success, errors, just visits

* captchas

* new email address for sending emails

* merge accounts from social and email (see SOCIAL_AUTH_ASSOCIATE_BY_MAIL)

* create google oauth2 app from grakon account (?)

* file with all passwords, social applications (where to get them)

--------------------------------------

Front-end
    * take only necessary parts of jquery-ui, compress
    * Reorganize classes in button and tabs templates, icons are not used in buttons anymore
    * share and share_horizontal are overlap a lot
    * when two buttons are close to each other (e.g. profile edit) - line appears between them
    * add google+ page to list of services
    * http://sass-lang.com/
    * http://www.modernizr.com/

Analytics:
    * analyze when user visited site/logged in last time
    * start using celery
    * configure logging, sentry
    * analyze access logs, use google analytics api; regularly build and analyze statistics of visits
    * use yandex targets (?) to monitor pressing buttons, registration and other activities

SEO:
    * Webmaster Tools, seo
    * how to deal with large sitemaps?

Testing:
    * perform testing and code testing before commit
    * testing in browsers, selenium, http://www.browserstack.com

Emails:
    * sending emails using mailgun.net or mailchimp.com (?)

Performance:
    * activate compression for tinymce
    * use debug toolbar, page speed to optimize page load

* user pictures
* replace disqus?

* analyze email postfixes, detect sending problems, configure properly

* stackoverflow-like ordering of news

* search + autocompletion

Deployment:
    * include sqlite file with empty db ready for use
    * configure nginx
    * describe complete deployment process - file access rights, running services, directories and users to create, creating database, etc.
    * database backups
    * configure virtualenv inside settings properly
    * generate server.sh as well


* set proper page titles

* предлагать друзей на площадке пользуясь списком друзей в соц сетях

* replace grakon_share_logo.jpg with logos/share.jpg (google oauth2 app), smaller version (60x60)
